image:
  name: "rapidsai/devcontainers:23.06-cpp-cuda11.8-mambaforge-ubuntu22.04"

stages:
    - build

Build:LegateCore:
  stage: build

  rules:
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event" || $CI_PIPELINE_SOURCE == "push") &&
          ($CI_PROJECT_PATH == "legate/cunumeric.internal")

  tags:
    - cpu_only
    - gpu/disabled

  variables:
    # Set the following two vars to `nthreads - 1`
    JOBS: 1
    CMAKE_BUILD_PARALLEL_LEVEL: 1
    PYTHONDONTWRITEBYTECODE: 1
    DEFAULT_CONDA_ENV: legate
    GIT_DEPTH: 0
    GIT_STRATEGY: clone
    # Add these if we want to speed up builds with sccache
    SCCACHE_REGION: us-east-2
    SCCACHE_BUCKET: rapids-sccache-devs
    SCCACHE_S3_KEY_PREFIX: legate-cunumeric-int-dev
    GH_TOKEN: ''
    GITHUB_TOKEN: ''
    VAULT_HOST: ''
    VAULT_S3_TTL: "28800s" # 8 hours

  before_script:
    # Set variables for AWS authentication
    - |
      if [ $PERSONAL_ACCESS_TOKEN ]; then 
        VAULT_HOST='https://vault.ops.k8s.rapids.ai'; 
        GH_TOKEN=$PERSONAL_ACCESS_TOKEN;
        GITHUB_TOKEN=$PERSONAL_ACCESS_TOKEN;
      fi
    # Clone legate.core and checkout to the expected version.
    - cd $CI_PROJECT_DIR/..
    - rm -rf legate.core.internal
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab-master.nvidia.com/legate/legate.core.internal.git
    - export LEGATE_SHA=$(cat $CI_PROJECT_DIR/cmake/versions.json | jq -r '.packages.legate_core_internal.git_tag')
    - echo "LEGATE_SHA- ${LEGATE_SHA}"
    - git -C legate.core.internal checkout $LEGATE_SHA
    # Copy relevant scripts
    - cp -ar legate.core.internal/continuous_integration/home/coder/.gitconfig /home/coder/;
    - cp -ar legate.core.internal/continuous_integration/home/coder/.local  ~coder/;
    - mv legate.core.internal ~coder/legate;
    - cp -ar $CI_PROJECT_DIR/continuous_integration/home/coder/.local/bin/*  ~coder/.local/bin/;
    - cp -ar $CI_PROJECT_DIR ~coder/cunumeric;
    - mkdir -p ~coder/.local
    - mkdir -p /tmp/out;
    - chown -R coder:coder /tmp/out
    - chown -R coder:coder /home/coder/

  script:
    # Create conda env
    - su coder -c 'cd ~/; exec entrypoint make-conda-env'
 
    # Build legate.core C++ library
    - su coder -c 'cd ~/; exec entrypoint build-legate-cpp'

    # Build legate.core Python Wheel
    - su coder -c 'cd ~/; exec entrypoint build-legate-wheel'

    # Build legate.core Conda Package
    - su coder -c 'cd ~/; exec entrypoint build-legate-conda'

    # Build cunumeric C++ library   
    - su coder -c 'cd ~/; exec entrypoint build-cunumeric-cpp'

    # Build cunumeric Python Wheel
    - su coder -c 'cd ~/; exec entrypoint build-cunumeric-wheel'

    # Build cunumeric Python Conda Package
    - su coder -c 'cd ~/; exec entrypoint build-cunumeric-conda'

  after_script:
    # Copy the artifacts
    - mkdir -p $CI_PROJECT_DIR/artifacts
    - cp /tmp/out/* $CI_PROJECT_DIR/artifacts/
    
  artifacts:
    name: "$CI_COMMIT_REF_NAME"
    paths:
      - artifacts
    exclude:
      - artifacts/env*.yaml


